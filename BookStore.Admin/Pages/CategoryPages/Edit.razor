@page "/categories/edit/{id}"

<MudGrid>
    <MudItem xs="3"></MudItem>
    <MudItem xs="6">
        <MudCard Class="mt-4">
            <MudCardHeader Class="d-flex justify-center"> <h3>Edit Category</h3> </MudCardHeader>
            <MudCardContent>
                <MudTextField @bind-Value="category.Name" Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudCardContent>
            <MudCardActions Class="d-flex justify-center">
                <MudButton @onclick="Cancel" Variant="Variant.Filled">Cancel</MudButton>
                <MudButton @onclick="Save" Class="ms-2" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="3"></MudItem>
</MudGrid>

@code {
    @inject NavigationManager navigation
    @inject HttpClient httpClient   
    @inject ISnackbar Snackbar
    Category category = new();

    [Parameter]
    public string Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync(Constants.BASE_URL + "categories/" + Id);
        if (response.IsSuccessStatusCode)
        {
            category = await response.Content.ReadFromJsonAsync<Category>();
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
            navigation.NavigateTo("/login");
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
            Snackbar.Add("Category not found!", Severity.Error);
            navigation.NavigateTo("/categories");
        }
        else
        {
            string errorContent = await response.Content.ReadAsStringAsync();
            Snackbar.Add(errorContent, Severity.Error);
            navigation.NavigateTo("/categories");
        }
    }

    private async void Save()
    {
        var json = JsonSerializer.Serialize(category);
        var data = new StringContent(json, Encoding.UTF8, "application/json");

        var response = await httpClient.PutAsync(Constants.BASE_URL + "categories", data);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Category updated successfully!", Severity.Success);
            Cancel();
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
            navigation.NavigateTo("/login");
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
        {
            var responseContent = await response.Content.ReadAsStringAsync();
            Snackbar.Add(responseContent, Severity.Error);
        }
        else
        {
            Snackbar.Add("Someting went error!", Severity.Error);
        }
    }


    private void Cancel()
    {
        navigation.NavigateTo("/categories");
    }
}